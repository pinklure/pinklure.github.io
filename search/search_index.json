{"config":{"indexing":"full","lang":["en","ja"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"What's this ? \u00b6 This is pinklure's personal posts page for my coding career record. Who am I ? \u00b6 Being a professional C++ developer was my target. After about 2 years learning, I consider myself as an half C++ developer with some experience. Hopefully, Linux kernel developer will be my new title in near future and that's what I'm running for recently. -- pinklure 2020 Contact me if anything. \u00b6 E-mail : zhaoqifan0106@gmail.com Github : https://github.com/pinklure","title":"Home"},{"location":"#whats-this","text":"This is pinklure's personal posts page for my coding career record.","title":"What's this ?"},{"location":"#who-am-i","text":"Being a professional C++ developer was my target. After about 2 years learning, I consider myself as an half C++ developer with some experience. Hopefully, Linux kernel developer will be my new title in near future and that's what I'm running for recently. -- pinklure 2020","title":"Who am I ?"},{"location":"#contact-me-if-anything","text":"E-mail : zhaoqifan0106@gmail.com Github : https://github.com/pinklure","title":"Contact me if anything."},{"location":"archive/","text":"Archive Home Page \u00b6","title":"Archive Home Page"},{"location":"archive/#archive-home-page","text":"","title":"Archive Home Page"},{"location":"posts/","text":"Posts Home Page \u00b6","title":"Posts Home Page"},{"location":"posts/#posts-home-page","text":"","title":"Posts Home Page"},{"location":"posts/linux/","text":"Linux \u00b6 eBPF \u00b6 Websites \u00b6 eBPF Learn eBPF Tracing: Tutorial and Examples Cilium - Linux Native, API-Aware Networking and Security for Containers Perfetto - System profiling, app tracing and trace analysis \u6ce2\u7c92\u6d3e Resources \u00b6 iovisor/bcc Kernel \u00b6 Websites \u00b6 Linux Kernel Documentation Linux Kernel Newbies Linux Weekly News The Linux Documentation Project The Linux Kernel, by TLDP Resources \u00b6 Linux kernel QEMU setup - V\u00edctor Colombo Booting a Custom Linux Kernel in QEMU and Debugging it with GDB - Nick Desaulniers Linux Device Drivers, Third Edition Miscellany \u00b6 Websites \u00b6 Corkami -- reverse engineering & technical illustrations Resources \u00b6 Executable_and_Linkable_Format How to Write Shared Libraries Linkers and Loaders The ELF format - how programs look from the inside","title":"Linux"},{"location":"posts/linux/#linux","text":"","title":"Linux"},{"location":"posts/linux/#ebpf","text":"","title":"eBPF"},{"location":"posts/linux/#websites","text":"eBPF Learn eBPF Tracing: Tutorial and Examples Cilium - Linux Native, API-Aware Networking and Security for Containers Perfetto - System profiling, app tracing and trace analysis \u6ce2\u7c92\u6d3e","title":"Websites"},{"location":"posts/linux/#resources","text":"iovisor/bcc","title":"Resources"},{"location":"posts/linux/#kernel","text":"","title":"Kernel"},{"location":"posts/linux/#websites_1","text":"Linux Kernel Documentation Linux Kernel Newbies Linux Weekly News The Linux Documentation Project The Linux Kernel, by TLDP","title":"Websites"},{"location":"posts/linux/#resources_1","text":"Linux kernel QEMU setup - V\u00edctor Colombo Booting a Custom Linux Kernel in QEMU and Debugging it with GDB - Nick Desaulniers Linux Device Drivers, Third Edition","title":"Resources"},{"location":"posts/linux/#miscellany","text":"","title":"Miscellany"},{"location":"posts/linux/#websites_2","text":"Corkami -- reverse engineering & technical illustrations","title":"Websites"},{"location":"posts/linux/#resources_2","text":"Executable_and_Linkable_Format How to Write Shared Libraries Linkers and Loaders The ELF format - how programs look from the inside","title":"Resources"},{"location":"posts/linux/performance_observability/","text":"Performance Observability \u00b6 Tools Preview \u00b6 Here is tools list \u00b6 CPUs \u00b6 specialized turbostat showboost rdmsr relative to Scheduler execsnoop mpstat profile runqlen offcputime softirqs relative to Virtual Memory top atop ps pidstat relative to DRAM tiptop perf DRAM \u00b6 specialized numastat relative to CPUs toptop perf System Libraries \u00b6 specialized ltrace gethostlatency System Call Interface \u00b6 specialized strace neighbor below this layer opensnoop Scheduler \u00b6 relative to CPUs execsnoop mpstat profile runqlen offcputime softirqs Virtual Memory \u00b6 specilized vmstat slabtop free Sockets \u00b6 specialized ss TCP/UDP \u00b6 specialized tcplife tcpretrans udpconnect relative to IP nstat IP \u00b6 relative to TCP/UDP nstat Net Device \u00b6 specialized tcpdump VFS \u00b6 specialized lsof fatrace filelife pcstat File Systems \u00b6 specialized ext4dist ext4slower Volume Manager \u00b6 specialized mdflush Block Device \u00b6 relative to Disk opstat biosnoop biolatency biotop blktrace Device Drivers \u00b6 neighbor above this layer hardirqs criticalstat I/O Bridge \u00b6 neighbor above this layer perf mdflush toptop Disk \u00b6 specialized SCSI log swapon relative to Block Device iostat biosnoop biolatency biotop blktrace Network Controller \u00b6 relative to Port nicstat netstat ip Port \u00b6 specialzed ethtool snmpget lldptool relative to Network Controller nicstat netstat ip","title":"Performance Observability"},{"location":"posts/linux/performance_observability/#performance-observability","text":"","title":"Performance Observability"},{"location":"posts/linux/performance_observability/#tools-preview","text":"","title":"Tools Preview"},{"location":"posts/linux/performance_observability/#here-is-tools-list","text":"","title":"Here is tools list"},{"location":"posts/linux/performance_observability/#cpus","text":"specialized turbostat showboost rdmsr relative to Scheduler execsnoop mpstat profile runqlen offcputime softirqs relative to Virtual Memory top atop ps pidstat relative to DRAM tiptop perf","title":"CPUs"},{"location":"posts/linux/performance_observability/#dram","text":"specialized numastat relative to CPUs toptop perf","title":"DRAM"},{"location":"posts/linux/performance_observability/#system-libraries","text":"specialized ltrace gethostlatency","title":"System Libraries"},{"location":"posts/linux/performance_observability/#system-call-interface","text":"specialized strace neighbor below this layer opensnoop","title":"System Call Interface"},{"location":"posts/linux/performance_observability/#scheduler","text":"relative to CPUs execsnoop mpstat profile runqlen offcputime softirqs","title":"Scheduler"},{"location":"posts/linux/performance_observability/#virtual-memory","text":"specilized vmstat slabtop free","title":"Virtual Memory"},{"location":"posts/linux/performance_observability/#sockets","text":"specialized ss","title":"Sockets"},{"location":"posts/linux/performance_observability/#tcpudp","text":"specialized tcplife tcpretrans udpconnect relative to IP nstat","title":"TCP/UDP"},{"location":"posts/linux/performance_observability/#ip","text":"relative to TCP/UDP nstat","title":"IP"},{"location":"posts/linux/performance_observability/#net-device","text":"specialized tcpdump","title":"Net Device"},{"location":"posts/linux/performance_observability/#vfs","text":"specialized lsof fatrace filelife pcstat","title":"VFS"},{"location":"posts/linux/performance_observability/#file-systems","text":"specialized ext4dist ext4slower","title":"File Systems"},{"location":"posts/linux/performance_observability/#volume-manager","text":"specialized mdflush","title":"Volume Manager"},{"location":"posts/linux/performance_observability/#block-device","text":"relative to Disk opstat biosnoop biolatency biotop blktrace","title":"Block Device"},{"location":"posts/linux/performance_observability/#device-drivers","text":"neighbor above this layer hardirqs criticalstat","title":"Device Drivers"},{"location":"posts/linux/performance_observability/#io-bridge","text":"neighbor above this layer perf mdflush toptop","title":"I/O Bridge"},{"location":"posts/linux/performance_observability/#disk","text":"specialized SCSI log swapon relative to Block Device iostat biosnoop biolatency biotop blktrace","title":"Disk"},{"location":"posts/linux/performance_observability/#network-controller","text":"relative to Port nicstat netstat ip","title":"Network Controller"},{"location":"posts/linux/performance_observability/#port","text":"specialzed ethtool snmpget lldptool relative to Network Controller nicstat netstat ip","title":"Port"},{"location":"posts/linux/performance_observability/dmesg/","text":"DEMSG \u00b6 Name \u00b6 dmesg - print or control the kernel ring buffer Description \u00b6 dmesg is used to examine or control the kernel ring buffer. The default action it to display all messages from the kernel ring buffer. Usage \u00b6 -C Clear the ring buffer. -c CLear the ring buffer after printing its contents. -D Disable the printing of messages to the console. -d Display the timestamp and the time delta spent between messages. -E Enable print messages to the console. -e Display the local time and delta in human-readable format. -F file Read the syslog messages from file . Only support old syslog format. Don't support kmsg format. -f list Restrict output to the given list of facilities. dmsg --facility=daemon will print messages from system daemons only. Supported facilities see --help output. -H Enable human-readable output. -J Use Json output format. -k Print kernel messages. -L[=when] Colorize the output. Argument when can be auto , never or always . If when is omitted, it defaults to auto . -l level Restrict output to the given list of levels . See --help for all supported levels . -n level Set the level at which printing of messages is done to the console. See --help for all supported levels . --noescape The unprintable and potentially unsafe characters are escaped in format \\x for security reason by default. This option disables this feature. It's usable for debugging purepose together with --raw. -P Do not pipe output into a pager. -p Add facility, level or timestamp info to each line of a multi-line message. -r Print the raw message buffer. -S For dmesg to use syslog kernel interface to read kernel messages. Ths default is to use /dev/kmsg rather than syslog since kernel 3.5.0. -s size Use a buffer of size to query the kernel ring buffer. 16392 by default. -T Print human-readable timestamps. --since/ --until time Display record until the specified time. -t Do not print kernel's timestamp. --time-format format Print timestamps using the given format . -u Print userspace messages. -w Wait for new messages. -W Wait and print only new messages. -x Decode facility and level numbers to human-readable prefixes.","title":"dmesg"},{"location":"posts/linux/performance_observability/dmesg/#demsg","text":"","title":"DEMSG"},{"location":"posts/linux/performance_observability/dmesg/#name","text":"dmesg - print or control the kernel ring buffer","title":"Name"},{"location":"posts/linux/performance_observability/dmesg/#description","text":"dmesg is used to examine or control the kernel ring buffer. The default action it to display all messages from the kernel ring buffer.","title":"Description"},{"location":"posts/linux/performance_observability/dmesg/#usage","text":"-C Clear the ring buffer. -c CLear the ring buffer after printing its contents. -D Disable the printing of messages to the console. -d Display the timestamp and the time delta spent between messages. -E Enable print messages to the console. -e Display the local time and delta in human-readable format. -F file Read the syslog messages from file . Only support old syslog format. Don't support kmsg format. -f list Restrict output to the given list of facilities. dmsg --facility=daemon will print messages from system daemons only. Supported facilities see --help output. -H Enable human-readable output. -J Use Json output format. -k Print kernel messages. -L[=when] Colorize the output. Argument when can be auto , never or always . If when is omitted, it defaults to auto . -l level Restrict output to the given list of levels . See --help for all supported levels . -n level Set the level at which printing of messages is done to the console. See --help for all supported levels . --noescape The unprintable and potentially unsafe characters are escaped in format \\x for security reason by default. This option disables this feature. It's usable for debugging purepose together with --raw. -P Do not pipe output into a pager. -p Add facility, level or timestamp info to each line of a multi-line message. -r Print the raw message buffer. -S For dmesg to use syslog kernel interface to read kernel messages. Ths default is to use /dev/kmsg rather than syslog since kernel 3.5.0. -s size Use a buffer of size to query the kernel ring buffer. 16392 by default. -T Print human-readable timestamps. --since/ --until time Display record until the specified time. -t Do not print kernel's timestamp. --time-format format Print timestamps using the given format . -u Print userspace messages. -w Wait for new messages. -W Wait and print only new messages. -x Decode facility and level numbers to human-readable prefixes.","title":"Usage"},{"location":"posts/linux/performance_observability/performance_in_60s/","text":"Linux Performance \u00b6 uptime \u00b6 uptime - Tell how long the system has been running. [ pinklure@Maj ~ ] $ uptime 14 :50:52 up 3 days, 16 min, 2 users, load average: 1 .74, 1 .00, 0 .90 {up time since last boot}, {user number}, {CPU load average in 1 min, 5 min, 15 min} dmesg | tail \u00b6 dmesg - print or control the kernel ring buffer [53369.999676] nvme 0000:02:00.0: device [15b7:5006] error status/mask=00000001/0000e000 [53369.999684] nvme 0000:02:00.0: [ 0] RxErr (First) [53409.891789] pcieport 0000:00:1d.0: AER: Corrected error received: 0000:02:00.0 [53409.891809] nvme 0000:02:00.0: PCIe Bus Error: severity=Corrected, type=Physical Layer, (Receiver ID) [53409.891815] nvme 0000:02:00.0: device [15b7:5006] error status/mask=00000001/0000e000 [53409.891821] nvme 0000:02:00.0: [ 0] RxErr (First) [53448.932368] pcieport 0000:00:1d.0: AER: Corrected error received: 0000:02:00.0 [53448.932394] nvme 0000:02:00.0: PCIe Bus Error: severity=Corrected, type=Physical Layer, (Receiver ID) [53448.932401] nvme 0000:02:00.0: device [15b7:5006] error status/mask=00000001/0000e000 [53448.932410] nvme 0000:02:00.0: [ 0] RxErr (First)","title":"Linux Performance"},{"location":"posts/linux/performance_observability/performance_in_60s/#linux-performance","text":"","title":"Linux Performance"},{"location":"posts/linux/performance_observability/performance_in_60s/#uptime","text":"uptime - Tell how long the system has been running. [ pinklure@Maj ~ ] $ uptime 14 :50:52 up 3 days, 16 min, 2 users, load average: 1 .74, 1 .00, 0 .90 {up time since last boot}, {user number}, {CPU load average in 1 min, 5 min, 15 min}","title":"uptime"},{"location":"posts/linux/performance_observability/performance_in_60s/#dmesg-tail","text":"dmesg - print or control the kernel ring buffer [53369.999676] nvme 0000:02:00.0: device [15b7:5006] error status/mask=00000001/0000e000 [53369.999684] nvme 0000:02:00.0: [ 0] RxErr (First) [53409.891789] pcieport 0000:00:1d.0: AER: Corrected error received: 0000:02:00.0 [53409.891809] nvme 0000:02:00.0: PCIe Bus Error: severity=Corrected, type=Physical Layer, (Receiver ID) [53409.891815] nvme 0000:02:00.0: device [15b7:5006] error status/mask=00000001/0000e000 [53409.891821] nvme 0000:02:00.0: [ 0] RxErr (First) [53448.932368] pcieport 0000:00:1d.0: AER: Corrected error received: 0000:02:00.0 [53448.932394] nvme 0000:02:00.0: PCIe Bus Error: severity=Corrected, type=Physical Layer, (Receiver ID) [53448.932401] nvme 0000:02:00.0: device [15b7:5006] error status/mask=00000001/0000e000 [53448.932410] nvme 0000:02:00.0: [ 0] RxErr (First)","title":"dmesg | tail"},{"location":"posts/linux/performance_observability/ps/","text":"PS \u00b6 Name \u00b6 ps - report a snapshot of the current processes Simple Process Selection \u00b6 -A : Select all processes. Identical to -e . -a : Select all processes except session leaders and processes not associated with a terminal. -d : Select all processes except session leaders. -e : Select all processes. Identical to -a . -N : Select all processes except those that fullfill the specified conditions. Process Selection By List \u00b6 There options accept a single argument in the form of blank-seperated or comma-separated list.","title":"ps"},{"location":"posts/linux/performance_observability/ps/#ps","text":"","title":"PS"},{"location":"posts/linux/performance_observability/ps/#name","text":"ps - report a snapshot of the current processes","title":"Name"},{"location":"posts/linux/performance_observability/ps/#simple-process-selection","text":"-A : Select all processes. Identical to -e . -a : Select all processes except session leaders and processes not associated with a terminal. -d : Select all processes except session leaders. -e : Select all processes. Identical to -a . -N : Select all processes except those that fullfill the specified conditions.","title":"Simple Process Selection"},{"location":"posts/linux/performance_observability/ps/#process-selection-by-list","text":"There options accept a single argument in the form of blank-seperated or comma-separated list.","title":"Process Selection By List"},{"location":"posts/linux/performance_observability/top/","text":"TOP \u00b6 Name \u00b6 top - display Linux processes Description \u00b6 \u63d0\u4f9b\u8fd0\u884c\u4e2d\u7684\u7cfb\u7edf\u7684\u52a8\u6001\u5b9e\u65f6\u89c2\u6d4b\uff0c\u53ef\u4ee5\u5c55\u793a system \u7684\u6982\u8ff0\u4fe1\u606f\uff0c\u5217\u51fa process or threads \u7684\u76f8\u5173\u4fe1\u606f\u3002 Linux Memory Types \u00b6 physical memory , a limited resource where code and data must reside when executed or referenced. swap file , where dirty memory can be saved and later retrieved if too many demands are made on physical memory . virtual memory , a nearly unlimited resource serving the following goals: abstraction , isolation , sharing , flexibility . All types of memory are managed as pages, typically 4096 bytes. Each memory page is restricted to a single quadrant from the table below. Private | Shared 1 | 2 Anonymous stack | mallock() | brk()/sbrk() | POSIX shm* mmap(PRIVATE, ANON) | mmap(SHARED, ANON) --------------------------------+----------------------- mmap(PRIVATE, fd) | mmap(SHARED, fd) pgms/shared libs | File-backed | 3 | 4 Memory Type Page Type physical memory #1, #2, #3, #4 swap file #1, #2, #3 virtual memory #1, #2, #3, #4 The memory in quadrant #4, when modified, acts as its own dedicated swap file. -- man page top process level memory columns classify \u00b6 Name Description %MEM RES / total physical memory CODE the 'pgms' portion of #3 DATA the entire #1 portion of VIRT + mmap file-backed pages of #3 RES anything occupying physical memory. RSan + RSfd + RSsh RSan #1 pages, which include any former #3 pages if modified RSfd #3 + #4 pages RSsh #2 pages RSlk subset of RES which cannot be swapped out. could be any quadrant SHR subset of RES, excludes #1, includes #2, #4, some of #3 SWAP potentially any quadrant except #4 USED RES + SWAP VIRT everything in-use and reserved (all quadrants) Program images and shared libraries are considered private to a process. But they will be accounted for shared (SHR) by the kernel. Summary Display \u00b6 1 2 3 4 5 top - 19:24:58 up 1 day, 4:50, 2 users, load average: 0.66, 0.57, 0.56 Tasks: 233 total, 2 running, 231 sleeping, 0 stopped, 0 zombie %Cpu(s): 0.5 us, 0.5 sy, 0.0 ni, 98.7 id, 0.0 wa, 0.2 hi, 0.1 si, 0.0 st MiB Mem : 7693.3 total, 476.8 free, 1841.9 used, 5374.5 buff/cache MiB Swap: 9011.2 total, 8313.9 free, 697.3 used. 4673.2 avail Mem Above Information Illustration line 1 {program/window name} - {current time} up {length of time since last boot}, {total number of user} users, load average: {load avg over 1, 5, 15 mins} line 2 Tasks: {total tasks/threads} {total is classified as running; sleeping; stopped; zombie} line 3 Name Description us, user time running un-niced user processes sy, system time running kernel process ni, nice time running niced user processes id, idle time spent in the kernel idle handler wa, IO-wait time waiting for I/O completion hi time spent servicing hardware interrupts si time spent servicing software interrupts st time stolen from this vm by the hypervisor line 4 & line 5 line 4 reflects physical memory , while line 5 reflects virtual memory . avail on line 5 is an estimation of physical memory available for starting new applications, without swapping. It attempts to account for readily reclaimable page cache and memory slabs Fields / Columns \u00b6 Description of Fields \u00b6 %CPU -- CPU Usage If top is not operating in Threads mode , some processes' may amount > 100%. %MEM -- Memory Usage (RES) A task's currently resident share of available physical memory. CGNAME -- Control Group Name CGROUP -- Control Groups CODE -- Code Size (KiB) / TRS -- Text Resident Set Amount of physical memory currently devoted to executable code. COMMAND -- Command Name or Command Line DATA -- Data + Stack Size (KiB) / DRS -- Data Resident Set Amount of private memory reserved by a process. Such memory may not yet be mapped to physical memory (RES), but will always be included in the VIRT amount. ENVIRON -- Environment variables Flags -- Task Flags Represents the task's current scheduling flags, which are officially documented in GID/GROUP -- Group Name LXC -- Lxc Container Name NI -- Nice Value NU -- last known NUMA node A number representing the NUMA node associated with the last used processor. -1 stands for NUMA info is not available. OOMa -- Out of Memory Adjustment Factor [-1000, +1000]. Added to OOMs. OOMs -- Out of Memory Score [0, +1000]. 0 stands for \"never kill\", whereas +1000 means \"always kill\". P -- Last used CPU PGRP -- Process Group Id PID -- Process Id PPID -- Parent Process Id PR -- Priority RES -- Resident Memory Size (KiB) A subset of the VIRT, representing the non-swapped physical memory a task is currently using. RSan -- Resident Anonymous Memory Size (KiB) RSfd -- Resident File-Backed Memory Size (KiB) RSlk -- Resident Locked Memory Size (KiB) RSsh -- Resident Shared Memory Size (KiB) RUID -- Real User Id RUSER -- Real User Name S -- Process Status Name Stands for D uninterruptible sleep I idle R running S sleeping T stopped by job control signal t stopped by debugger during trace Z zombie SHR -- Shared Memory Size (KiB) A subset of RES that may be used by other processes. It includes shared anonymous pages , shared file-backed pages and private pages mapped to file representing program images and shared libraries. SID -- Session Id SUID -- Save User Id SUPGRPS -- Supplementary Group Names The names of any supplementary group(s) established at login or inherited from a task's parent. SUSER -- Saved User Name SWAP -- Swapped Size (KiB) TGID -- Thread Gourp Id TIME -- CPU Time Total CPU time the task has used since it started. TIME+ -- CPU Time, hundredths The same as TIME , but reflecting more granularity though hundredths of a second. TPGID -- Tty Process Group Id TTY -- Controlling Tty UID -- User Id USED -- Memory in Use (KiB) None-swapped physical memory as task is using (RES) + swapped out porttion of its address space (SWAP). USER -- Effective User Name VIRT --Virtual Memory Size (KiB) Total amount of virtual memory used by the task. It includes all code , data and shared libraries , plus pages that have been swapped out and pages that have been mapped but not used . WCHAN -- Sleeping in Function Show the name of the kernel function in which the task is currently sleeping. nDRT -- Dirty Pages Count (Deprecated since Linux 2.6) The number of pages that have been modified since they were last written to auxiliary storage. nMaj -- Major Page Fault Count A major page fault is when auxiliary storage access is involved in making that page available. nMin -- Minor Page Fault count A minor page fault does not involve auxiliary storage access in making that page available. nTH -- Number of Threads nsIPC -- IPC namespace nsMNT -- MNT namespace nsNET -- NET namespace nsPID -- PID namespace nsUSER -- USER namespace nsUTS -- UTS namespace vMj -- Major Page Fault Count Delta vMn -- Minor Page Fault Count Delta todo...","title":"top"},{"location":"posts/linux/performance_observability/top/#top","text":"","title":"TOP"},{"location":"posts/linux/performance_observability/top/#name","text":"top - display Linux processes","title":"Name"},{"location":"posts/linux/performance_observability/top/#description","text":"\u63d0\u4f9b\u8fd0\u884c\u4e2d\u7684\u7cfb\u7edf\u7684\u52a8\u6001\u5b9e\u65f6\u89c2\u6d4b\uff0c\u53ef\u4ee5\u5c55\u793a system \u7684\u6982\u8ff0\u4fe1\u606f\uff0c\u5217\u51fa process or threads \u7684\u76f8\u5173\u4fe1\u606f\u3002","title":"Description"},{"location":"posts/linux/performance_observability/top/#linux-memory-types","text":"physical memory , a limited resource where code and data must reside when executed or referenced. swap file , where dirty memory can be saved and later retrieved if too many demands are made on physical memory . virtual memory , a nearly unlimited resource serving the following goals: abstraction , isolation , sharing , flexibility . All types of memory are managed as pages, typically 4096 bytes. Each memory page is restricted to a single quadrant from the table below. Private | Shared 1 | 2 Anonymous stack | mallock() | brk()/sbrk() | POSIX shm* mmap(PRIVATE, ANON) | mmap(SHARED, ANON) --------------------------------+----------------------- mmap(PRIVATE, fd) | mmap(SHARED, fd) pgms/shared libs | File-backed | 3 | 4 Memory Type Page Type physical memory #1, #2, #3, #4 swap file #1, #2, #3 virtual memory #1, #2, #3, #4 The memory in quadrant #4, when modified, acts as its own dedicated swap file. -- man page","title":"Linux Memory Types"},{"location":"posts/linux/performance_observability/top/#top-process-level-memory-columns-classify","text":"Name Description %MEM RES / total physical memory CODE the 'pgms' portion of #3 DATA the entire #1 portion of VIRT + mmap file-backed pages of #3 RES anything occupying physical memory. RSan + RSfd + RSsh RSan #1 pages, which include any former #3 pages if modified RSfd #3 + #4 pages RSsh #2 pages RSlk subset of RES which cannot be swapped out. could be any quadrant SHR subset of RES, excludes #1, includes #2, #4, some of #3 SWAP potentially any quadrant except #4 USED RES + SWAP VIRT everything in-use and reserved (all quadrants) Program images and shared libraries are considered private to a process. But they will be accounted for shared (SHR) by the kernel.","title":"top process level memory columns classify"},{"location":"posts/linux/performance_observability/top/#summary-display","text":"1 2 3 4 5 top - 19:24:58 up 1 day, 4:50, 2 users, load average: 0.66, 0.57, 0.56 Tasks: 233 total, 2 running, 231 sleeping, 0 stopped, 0 zombie %Cpu(s): 0.5 us, 0.5 sy, 0.0 ni, 98.7 id, 0.0 wa, 0.2 hi, 0.1 si, 0.0 st MiB Mem : 7693.3 total, 476.8 free, 1841.9 used, 5374.5 buff/cache MiB Swap: 9011.2 total, 8313.9 free, 697.3 used. 4673.2 avail Mem Above Information Illustration line 1 {program/window name} - {current time} up {length of time since last boot}, {total number of user} users, load average: {load avg over 1, 5, 15 mins} line 2 Tasks: {total tasks/threads} {total is classified as running; sleeping; stopped; zombie} line 3 Name Description us, user time running un-niced user processes sy, system time running kernel process ni, nice time running niced user processes id, idle time spent in the kernel idle handler wa, IO-wait time waiting for I/O completion hi time spent servicing hardware interrupts si time spent servicing software interrupts st time stolen from this vm by the hypervisor line 4 & line 5 line 4 reflects physical memory , while line 5 reflects virtual memory . avail on line 5 is an estimation of physical memory available for starting new applications, without swapping. It attempts to account for readily reclaimable page cache and memory slabs","title":"Summary Display"},{"location":"posts/linux/performance_observability/top/#fields-columns","text":"","title":"Fields / Columns"},{"location":"posts/linux/performance_observability/top/#description-of-fields","text":"%CPU -- CPU Usage If top is not operating in Threads mode , some processes' may amount > 100%. %MEM -- Memory Usage (RES) A task's currently resident share of available physical memory. CGNAME -- Control Group Name CGROUP -- Control Groups CODE -- Code Size (KiB) / TRS -- Text Resident Set Amount of physical memory currently devoted to executable code. COMMAND -- Command Name or Command Line DATA -- Data + Stack Size (KiB) / DRS -- Data Resident Set Amount of private memory reserved by a process. Such memory may not yet be mapped to physical memory (RES), but will always be included in the VIRT amount. ENVIRON -- Environment variables Flags -- Task Flags Represents the task's current scheduling flags, which are officially documented in GID/GROUP -- Group Name LXC -- Lxc Container Name NI -- Nice Value NU -- last known NUMA node A number representing the NUMA node associated with the last used processor. -1 stands for NUMA info is not available. OOMa -- Out of Memory Adjustment Factor [-1000, +1000]. Added to OOMs. OOMs -- Out of Memory Score [0, +1000]. 0 stands for \"never kill\", whereas +1000 means \"always kill\". P -- Last used CPU PGRP -- Process Group Id PID -- Process Id PPID -- Parent Process Id PR -- Priority RES -- Resident Memory Size (KiB) A subset of the VIRT, representing the non-swapped physical memory a task is currently using. RSan -- Resident Anonymous Memory Size (KiB) RSfd -- Resident File-Backed Memory Size (KiB) RSlk -- Resident Locked Memory Size (KiB) RSsh -- Resident Shared Memory Size (KiB) RUID -- Real User Id RUSER -- Real User Name S -- Process Status Name Stands for D uninterruptible sleep I idle R running S sleeping T stopped by job control signal t stopped by debugger during trace Z zombie SHR -- Shared Memory Size (KiB) A subset of RES that may be used by other processes. It includes shared anonymous pages , shared file-backed pages and private pages mapped to file representing program images and shared libraries. SID -- Session Id SUID -- Save User Id SUPGRPS -- Supplementary Group Names The names of any supplementary group(s) established at login or inherited from a task's parent. SUSER -- Saved User Name SWAP -- Swapped Size (KiB) TGID -- Thread Gourp Id TIME -- CPU Time Total CPU time the task has used since it started. TIME+ -- CPU Time, hundredths The same as TIME , but reflecting more granularity though hundredths of a second. TPGID -- Tty Process Group Id TTY -- Controlling Tty UID -- User Id USED -- Memory in Use (KiB) None-swapped physical memory as task is using (RES) + swapped out porttion of its address space (SWAP). USER -- Effective User Name VIRT --Virtual Memory Size (KiB) Total amount of virtual memory used by the task. It includes all code , data and shared libraries , plus pages that have been swapped out and pages that have been mapped but not used . WCHAN -- Sleeping in Function Show the name of the kernel function in which the task is currently sleeping. nDRT -- Dirty Pages Count (Deprecated since Linux 2.6) The number of pages that have been modified since they were last written to auxiliary storage. nMaj -- Major Page Fault Count A major page fault is when auxiliary storage access is involved in making that page available. nMin -- Minor Page Fault count A minor page fault does not involve auxiliary storage access in making that page available. nTH -- Number of Threads nsIPC -- IPC namespace nsMNT -- MNT namespace nsNET -- NET namespace nsPID -- PID namespace nsUSER -- USER namespace nsUTS -- UTS namespace vMj -- Major Page Fault Count Delta vMn -- Minor Page Fault Count Delta todo...","title":"Description of Fields"},{"location":"posts/linux/performance_observability/vmstat/","text":"VMSTAT \u00b6 Name \u00b6 vmstat - Repostr virtual memory statistics. Synopsis \u00b6 vmstat [options] [delay [count]] Description \u00b6 vmstat report information about processes , memory , paging , block IO , traps , disks and cpu activity . The first report produced gives averages since the last reboot. Additional reports give information on a sampling period of length delay. The process and memory reports are instantaneous in either case. Options \u00b6 -a Display active and inactive memory. -f Switch displays the number of forks since boot. This includes the fork , vfork , clion syscalls, and is equivaltent to the total number of tasks created. Each process is represented by one or more tasks, depending on thread usage. This display does not repeat. -m Display slab info. -n Display the header only once rather than periodically. -s Displays a table of various event counters and memory statistics. This display does not repeat. -d Report disk statistics. -D Report some summary statistics about disk activity. -p device Detailed statistics about partition. -S character Switches outputs between 1000(k), 1024(K), 1000 000(m), or 1024*1024(M) bytes. -t Append timestamp to each line. -w Wide output mode. Field Description for VM Mode \u00b6 Procs r: The number of runnable processes (running or waiting for run time). b: The number of processes blocked waiting for I/O to complete. Memory These are affected by the --unit option. swpd: the amount of swap memory used. free: the amount of idle memory. buff: the amount of memory used as buffers. cache: the amount of memory used as cache. inact: the amount of inactive memory. (-a option) active: the amount of active memory. (-a option) Swap These are affected by the --unit option. si: Amount of memory swapped in from disk (/s). so: Amount of memory swapped to disk (/s). IO bi: Blocks received from a block device (blocks/s). bo: Blocks sent to a block device (blocks/s). System in: The number of interrupts per second, including the clock. cs: The number of context switches per second. CPU These are percentages of total CPU time. us: Time spent running non-kernel code. (user time, including nice time) sy: Time spent running kernel code. (system time) id: Time spent idle. Prior to Linux 2.5.41, this includes IO-wait time. wa: Time spent waiting for IO. Prior to Linux 2.5.41, included in idle. st: Time stolen from a virtual machine. Prior to Linux 2.6.11, unknown. Field Description for Disk Mode \u00b6 Reads total: Total reads completed successfully merged: grouped reads (resulting in one I/O) sectors: Sectors read successfully ms: milliseconds spent reading Writes total: Total writes completed successfully merged: grouped writes (resulting in one I/O) sectors: Sectors written successfully ms: milliseconds spent writing IO cur: I/O in progress s: seconds spent for I/O Field Description for Disk Partition Mode \u00b6 reads: Total number of reads issued to this partition read sectors: Total read sectors for partition writes : Total number of writes issued to this partition requested writes: Total number of write requests made for partition Field Descriptionn for Slab Mode \u00b6 cache: Cache name num: Number of currently active objects total: Total number of available objects size: Size of each object pages: Number of pages with at least one active object","title":"vmstat"},{"location":"posts/linux/performance_observability/vmstat/#vmstat","text":"","title":"VMSTAT"},{"location":"posts/linux/performance_observability/vmstat/#name","text":"vmstat - Repostr virtual memory statistics.","title":"Name"},{"location":"posts/linux/performance_observability/vmstat/#synopsis","text":"vmstat [options] [delay [count]]","title":"Synopsis"},{"location":"posts/linux/performance_observability/vmstat/#description","text":"vmstat report information about processes , memory , paging , block IO , traps , disks and cpu activity . The first report produced gives averages since the last reboot. Additional reports give information on a sampling period of length delay. The process and memory reports are instantaneous in either case.","title":"Description"},{"location":"posts/linux/performance_observability/vmstat/#options","text":"-a Display active and inactive memory. -f Switch displays the number of forks since boot. This includes the fork , vfork , clion syscalls, and is equivaltent to the total number of tasks created. Each process is represented by one or more tasks, depending on thread usage. This display does not repeat. -m Display slab info. -n Display the header only once rather than periodically. -s Displays a table of various event counters and memory statistics. This display does not repeat. -d Report disk statistics. -D Report some summary statistics about disk activity. -p device Detailed statistics about partition. -S character Switches outputs between 1000(k), 1024(K), 1000 000(m), or 1024*1024(M) bytes. -t Append timestamp to each line. -w Wide output mode.","title":"Options"},{"location":"posts/linux/performance_observability/vmstat/#field-description-for-vm-mode","text":"Procs r: The number of runnable processes (running or waiting for run time). b: The number of processes blocked waiting for I/O to complete. Memory These are affected by the --unit option. swpd: the amount of swap memory used. free: the amount of idle memory. buff: the amount of memory used as buffers. cache: the amount of memory used as cache. inact: the amount of inactive memory. (-a option) active: the amount of active memory. (-a option) Swap These are affected by the --unit option. si: Amount of memory swapped in from disk (/s). so: Amount of memory swapped to disk (/s). IO bi: Blocks received from a block device (blocks/s). bo: Blocks sent to a block device (blocks/s). System in: The number of interrupts per second, including the clock. cs: The number of context switches per second. CPU These are percentages of total CPU time. us: Time spent running non-kernel code. (user time, including nice time) sy: Time spent running kernel code. (system time) id: Time spent idle. Prior to Linux 2.5.41, this includes IO-wait time. wa: Time spent waiting for IO. Prior to Linux 2.5.41, included in idle. st: Time stolen from a virtual machine. Prior to Linux 2.6.11, unknown.","title":"Field Description for VM Mode"},{"location":"posts/linux/performance_observability/vmstat/#field-description-for-disk-mode","text":"Reads total: Total reads completed successfully merged: grouped reads (resulting in one I/O) sectors: Sectors read successfully ms: milliseconds spent reading Writes total: Total writes completed successfully merged: grouped writes (resulting in one I/O) sectors: Sectors written successfully ms: milliseconds spent writing IO cur: I/O in progress s: seconds spent for I/O","title":"Field Description for Disk Mode"},{"location":"posts/linux/performance_observability/vmstat/#field-description-for-disk-partition-mode","text":"reads: Total number of reads issued to this partition read sectors: Total read sectors for partition writes : Total number of writes issued to this partition requested writes: Total number of write requests made for partition","title":"Field Description for Disk Partition Mode"},{"location":"posts/linux/performance_observability/vmstat/#field-descriptionn-for-slab-mode","text":"cache: Cache name num: Number of currently active objects total: Total number of available objects size: Size of each object pages: Number of pages with at least one active object","title":"Field Descriptionn for Slab Mode"}]}